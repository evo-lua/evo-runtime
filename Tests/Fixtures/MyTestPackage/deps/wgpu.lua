-- -- Auto-generated module loader (convenience layer)
local deps = require("deps")

local author, libname = "author", "lua-webgpu" -- We know this here because it's autogenerated on install
local packageName = author .. "/" .. libname -- Might be different depending on how it was installed (https, github etc)
local requestedVersion =  deps[packageName].version -- Also known? But I guess it's easier to let the user select it via deps.lua


-- printf("packageName: %s", packageName)
-- printf("requestedVersion: %s", requestedVersion)
-- printf("requireRootPath: %s", requireRootPath)


local packageDir = path.join(".", "deps", author, libname, requestedVersion, "?.lua")
package.path = packageDir .. ";" .. package.path

return require("luawebgpu")

-- dump(deps)



-- -- TBD use modname param in loader to load other files/in subdirs?
-- local requireRootPath = path.join("deps", packageName, requestedVersion) -- TBD path.join?

-- -- TBD dofile or require? in LUAZIP?
-- -- Version 1: Using dofile (does not work in LUAZIP app, unless extracted to disk?)

-- local package = {
-- 	-- __index = function()
-- 	-- 	return dofile(path.join(requireRootPath, modname)) -- TBD dofile or require? in LUAZIP?
-- 	-- end,
-- 	author = author,
-- 	packageName = packageName,
-- 	fullyQualifiedName = packageName,
-- 	requireRootPath = requireRootPath,
-- 	dofile = function(self, script)
-- 		printf("Loading script: %s", script)
-- 		-- NYI
-- 		return "NYI"
-- 	end,
-- }

-- -- Version 2: Using the default require (also works in LUAZIP app, via custom package.loader)
-- -- local modname = "webgpu"
-- -- return require(string.gsub(path.join(requireRootPath, modname), "/", "."))
-- return  package