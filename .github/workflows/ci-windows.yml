name: Build and Release (Windows)

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - main
    paths-ignore:
      - '**.md'
  create:
    # Any branch or tag
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:
    if: github.event.pull_request.draft == false
    name: Build for Windows
    runs-on: windows-latest
    env:
      SCCACHE_GHA_ENABLED: "true"

    defaults:
      run:
        shell: msys2 {0}

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: "0" # Required so that git describe actually works (and we can embed the version tag)

      - name: Set up MSYS2 environment
        uses: msys2/setup-msys2@v2
        with:
          install: git make mingw-w64-x86_64-gcc ninja mingw-w64-x86_64-cmake

      - name: Set up sccache
        uses: mozilla-actions/sccache-action@v0.0.3

      - name: Download Webview2 SDK
        run: deps/fetch-mswebview2.sh && ls ninjabuild-windows

      - name: Configure environment
        run: |
          export SCCACHE_WINDOWS_PATH=${SCCACHE_PATH}
          export SCCACHE_UNIX_PATH=$(cygpath -u "$SCCACHE_WINDOWS_PATH")
          echo "SCCACHE_UNIX_PATH=$SCCACHE_UNIX_PATH" >> $GITHUB_ENV
          echo "CC=${SCCACHE_UNIX_PATH} gcc" >> $GITHUB_ENV
          echo "CXX=${SCCACHE_UNIX_PATH} g++" >> $GITHUB_ENV

      - name: Build luajit
        run: deps/luajit-windowsbuild.sh && ls ninjabuild-windows

      - name: Build luv and libuv
        run: deps/luv-windowsbuild.sh && ls ninjabuild-windows

      - name: Build openssl
        run: deps/openssl-windowsbuild.sh && ls ninjabuild-windows

      - name: Build lua-openssl
        run: deps/luaopenssl-windowsbuild.sh && ls ninjabuild-windows

      - name: Build zlib
        run: deps/zlib-windowsbuild.sh && ls ninjabuild-windows

      - name: Build runtime
        run: ls && ./windowsbuild.cmd && ls ninjabuild-windows && cp ninjabuild-windows/evo.exe . && ls

      - name: Run smoke tests
        run: ./evo Tests/smoke-test.lua

      - name: Run unit tests
        run: ./evo Tests/unit-test.lua

      - name: Publish new release
        # Truly "continuous" releases may be overkill here, so better only release tagged versions
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          files: evo.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}